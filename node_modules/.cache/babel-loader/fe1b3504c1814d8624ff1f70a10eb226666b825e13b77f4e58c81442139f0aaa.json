{"ast":null,"code":"var _jsxFileName = \"/Users/janhvisaini/VSCodeProjects/report-generator copy/client/src/Table.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ReactPaginate from 'react-paginate';\nimport './TableWithPagination.css'; // Create a CSS file for custom styling if needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = Array.from({\n  length: 100\n}, (_, index) => ({\n  id: index + 1,\n  name: `Name ${index + 1}`,\n  value: `Value ${index + 1}`\n}));\nconst itemsPerPage = 10;\nconst TableWithPagination = () => {\n  _s();\n  const [currentPage, setCurrentPage] = useState(0);\n  const handlePageClick = _ref => {\n    let {\n      selected\n    } = _ref;\n    setCurrentPage(selected);\n  };\n  const offset = currentPage * itemsPerPage;\n  const currentPageData = data.slice(offset, offset + itemsPerPage);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Value\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: currentPageData.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 29\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ReactPaginate, {\n      previousLabel: 'previous',\n      nextLabel: 'next',\n      breakLabel: '...',\n      breakClassName: 'break-me',\n      pageCount: Math.ceil(data.length / itemsPerPage),\n      marginPagesDisplayed: 2,\n      pageRangeDisplayed: 5,\n      onPageChange: handlePageClick,\n      containerClassName: 'pagination',\n      activeClassName: 'active'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(TableWithPagination, \"kF5zyetxw6M8BnbNC3J8pG5ccpI=\");\n_c = TableWithPagination;\nexport default TableWithPagination;\nvar _c;\n$RefreshReg$(_c, \"TableWithPagination\");","map":{"version":3,"names":["React","useState","ReactPaginate","data","Array","from","length","_","index","id","name","value","itemsPerPage","TableWithPagination","currentPage","setCurrentPage","handlePageClick","selected","offset","currentPageData","slice","map","item","Math","ceil"],"sources":["/Users/janhvisaini/VSCodeProjects/report-generator copy/client/src/Table.js"],"sourcesContent":["import React, { useState } from 'react';\nimport ReactPaginate from 'react-paginate';\nimport './TableWithPagination.css'; // Create a CSS file for custom styling if needed\n\nconst data = Array.from({ length: 100 }, (_, index) => ({\n    id: index + 1,\n    name: `Name ${index + 1}`,\n    value: `Value ${index + 1}`,\n}));\n\nconst itemsPerPage = 10;\n\nconst TableWithPagination = () => {\n    const [currentPage, setCurrentPage] = useState(0);\n\n    const handlePageClick = ({ selected }) => {\n        setCurrentPage(selected);\n    };\n\n    const offset = currentPage * itemsPerPage;\n    const currentPageData = data.slice(offset, offset + itemsPerPage);\n\n    return (\n        <div>\n            <table>\n                <thead>\n                    <tr>\n                        <th>ID</th>\n                        <th>Name</th>\n                        <th>Value</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {currentPageData.map((item) => (\n                        <tr key={item.id}>\n                            <td>{item.id}</td>\n                            <td>{item.name}</td>\n                            <td>{item.value}</td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n            <ReactPaginate\n                previousLabel={'previous'}\n                nextLabel={'next'}\n                breakLabel={'...'}\n                breakClassName={'break-me'}\n                pageCount={Math.ceil(data.length / itemsPerPage)}\n                marginPagesDisplayed={2}\n                pageRangeDisplayed={5}\n                onPageChange={handlePageClick}\n                containerClassName={'pagination'}\n                activeClassName={'active'}\n            />\n        </div>\n    );\n};\n\nexport default TableWithPagination;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,aAAa,MAAM,gBAAgB;AAC1C,OAAO,2BAA2B,CAAC,CAAC;AAAA;AAEpC,MAAMC,IAAI,GAAGC,KAAK,CAACC,IAAI,CAAC;EAAEC,MAAM,EAAE;AAAI,CAAC,EAAE,CAACC,CAAC,EAAEC,KAAK,MAAM;EACpDC,EAAE,EAAED,KAAK,GAAG,CAAC;EACbE,IAAI,EAAG,QAAOF,KAAK,GAAG,CAAE,EAAC;EACzBG,KAAK,EAAG,SAAQH,KAAK,GAAG,CAAE;AAC9B,CAAC,CAAC,CAAC;AAEH,MAAMI,YAAY,GAAG,EAAE;AAEvB,MAAMC,mBAAmB,GAAG,MAAM;EAAA;EAC9B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EAEjD,MAAMe,eAAe,GAAG,QAAkB;IAAA,IAAjB;MAAEC;IAAS,CAAC;IACjCF,cAAc,CAACE,QAAQ,CAAC;EAC5B,CAAC;EAED,MAAMC,MAAM,GAAGJ,WAAW,GAAGF,YAAY;EACzC,MAAMO,eAAe,GAAGhB,IAAI,CAACiB,KAAK,CAACF,MAAM,EAAEA,MAAM,GAAGN,YAAY,CAAC;EAEjE,oBACI;IAAA,wBACI;MAAA,wBACI;QAAA,uBACI;UAAA,wBACI;YAAA,UAAI;UAAE;YAAA;YAAA;YAAA;UAAA,QAAK,eACX;YAAA,UAAI;UAAI;YAAA;YAAA;YAAA;UAAA,QAAK,eACb;YAAA,UAAI;UAAK;YAAA;YAAA;YAAA;UAAA,QAAK;QAAA;UAAA;UAAA;UAAA;QAAA;MACb;QAAA;QAAA;QAAA;MAAA,QACD,eACR;QAAA,UACKO,eAAe,CAACE,GAAG,CAAEC,IAAI,iBACtB;UAAA,wBACI;YAAA,UAAKA,IAAI,CAACb;UAAE;YAAA;YAAA;YAAA;UAAA,QAAM,eAClB;YAAA,UAAKa,IAAI,CAACZ;UAAI;YAAA;YAAA;YAAA;UAAA,QAAM,eACpB;YAAA,UAAKY,IAAI,CAACX;UAAK;YAAA;YAAA;YAAA;UAAA,QAAM;QAAA,GAHhBW,IAAI,CAACb,EAAE;UAAA;UAAA;UAAA;QAAA,QAKnB;MAAC;QAAA;QAAA;QAAA;MAAA,QACE;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ,eACR,QAAC,aAAa;MACV,aAAa,EAAE,UAAW;MAC1B,SAAS,EAAE,MAAO;MAClB,UAAU,EAAE,KAAM;MAClB,cAAc,EAAE,UAAW;MAC3B,SAAS,EAAEc,IAAI,CAACC,IAAI,CAACrB,IAAI,CAACG,MAAM,GAAGM,YAAY,CAAE;MACjD,oBAAoB,EAAE,CAAE;MACxB,kBAAkB,EAAE,CAAE;MACtB,YAAY,EAAEI,eAAgB;MAC9B,kBAAkB,EAAE,YAAa;MACjC,eAAe,EAAE;IAAS;MAAA;MAAA;MAAA;IAAA,QAC5B;EAAA;IAAA;IAAA;IAAA;EAAA,QACA;AAEd,CAAC;AAAC,GA5CIH,mBAAmB;AAAA,KAAnBA,mBAAmB;AA8CzB,eAAeA,mBAAmB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}